{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport getWordGrid, { wordList, rowCount, colCount } from './wordsearch.js';\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cell extends React.Component {\n  render() {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    const randomCharacter = alphabet[Math.floor(Math.random() * alphabet.length)];\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      children: randomCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Grid extends React.Component {\n  renderCell(i) {\n    return /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    const status = 'you have # words left';\n    getWordGrid();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WordSearch extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(WordSearch, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/index.js"],"names":["React","ReactDOM","getWordGrid","wordList","rowCount","colCount","Cell","Component","render","alphabet","randomCharacter","Math","floor","random","length","Grid","renderCell","i","status","WordSearch","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,IAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C,QAAyD,iBAAzD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,4BAAjB;AAEA,UAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAAD,CAAhC;AAEA,wBACE;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAXgC;;AAenC,MAAMK,IAAN,SAAmBf,KAAK,CAACO,SAAzB,CAAmC;AACjCS,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZ,wBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDT,EAAAA,MAAM,GAAG;AACP,UAAMU,MAAM,GAAG,uBAAf;AACAhB,IAAAA,WAAW;AACX,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBgB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAhBgC;;AAoBnC,MAAMC,UAAN,SAAyBnB,KAAK,CAACO,SAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAbsC;;AAkBzCP,QAAQ,CAACO,MAAT,eACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport getWordGrid, { wordList, rowCount, colCount} from './wordsearch.js'\n\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\nclass Cell extends React.Component {\n  render() {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\n    const randomCharacter = alphabet[Math.floor(Math.random() * alphabet.length)]\n\n    return (\n      <button className=\"cell\">\n        {randomCharacter}\n      </button>\n    );\n  }\n}\n\n\nclass Grid extends React.Component {\n  renderCell(i) {\n    return <Cell />;\n  }\n\n  render() {\n    const status = 'you have # words left';\n    getWordGrid();\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n        \n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass WordSearch extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Grid />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(\n  <WordSearch />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}