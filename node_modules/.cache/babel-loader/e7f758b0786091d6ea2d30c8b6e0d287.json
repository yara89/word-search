{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/grid.js\";\nimport React from 'react';\nimport BoardCell from './BoardCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  cellSelected(rows, cols) {\n    let charIndex = \"r\" + rows + \"-c\" + cols;\n    return this.props.highlightedChars.hasOwnProperty(charIndex);\n  }\n\n  render() {\n    //const status = 'you have' + ' ' + {words.length} + ' words left';\n    const board = [];\n    let rows = 0;\n    this.props.values.forEach(element => {\n      let wordList = [];\n\n      for (let i = 0; i < element.length; i++) {\n        wordList.push( /*#__PURE__*/_jsxDEV(BoardCell, {\n          rowIndex: rows,\n          colIndex: i,\n          letter: element[i],\n          isSelected: this.cellSelected(rows, i),\n          onCellClick: this.props.onCellClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 27\n        }, this));\n      }\n\n      ;\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: wordList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this));\n      rows++;\n    });\n    let isSelected = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/grid.js"],"names":["React","BoardCell","Grid","Component","constructor","props","cellSelected","rows","cols","charIndex","highlightedChars","hasOwnProperty","render","board","values","forEach","element","wordList","i","length","push","onCellClick","isSelected"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAED;;AAGDC,EAAAA,YAAY,CAACC,IAAD,EAAMC,IAAN,EAAY;AACtB,QAAIC,SAAS,GAAC,MAAMF,IAAN,GAAa,IAAb,GAAoBC,IAAlC;AACA,WAAO,KAAKH,KAAL,CAAWK,gBAAX,CAA4BC,cAA5B,CAA2CF,SAA3C,CAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,QAAIN,IAAI,GAAC,CAAT;AAEA,SAAKF,KAAL,CAAWS,MAAX,CAAkBC,OAAlB,CAA0BC,OAAO,IAAI;AACnC,UAAIC,QAAQ,GAAE,EAAd;;AACE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtCD,QAAAA,QAAQ,CAACG,IAAT,eAAc,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEb,IAArB;AAA2B,UAAA,QAAQ,EAAEW,CAArC;AAAwC,UAAA,MAAM,EAAEF,OAAO,CAACE,CAAD,CAAvD;AAA4D,UAAA,UAAU,EAAE,KAAKZ,YAAL,CAAkBC,IAAlB,EAAuBW,CAAvB,CAAxE;AAAmG,UAAA,WAAW,EAAE,KAAKb,KAAL,CAAWgB;AAA3H;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AAAA;AACDR,MAAAA,KAAK,CAACO,IAAN,eAAW;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAX;AAEAV,MAAAA,IAAI;AACL,KARH;AAUE,QAAIe,UAAU,GAAG,EAAjB;AAIF,wBACK;AAAA,gBACAT;AADA;AAAA;AAAA;AAAA;AAAA,YADL;AAKD;;AApC6C","sourcesContent":["\nimport React from 'react';\nimport BoardCell from './BoardCell'\n\n\nexport default class Grid extends React.Component {\n    constructor(props) {      \n      super(props); \n    \n    }\n\n\n    cellSelected(rows,cols) {\n      let charIndex=\"r\" + rows + \"-c\" + cols;\n      return this.props.highlightedChars.hasOwnProperty(charIndex);\n    }\n\n    render() {\n      //const status = 'you have' + ' ' + {words.length} + ' words left';\n      const board = [];\n      let rows=0;\n\n      this.props.values.forEach(element => {\n        let wordList =[];\n          for (let i = 0; i < element.length; i++){\n            wordList.push(<BoardCell rowIndex={rows} colIndex={i} letter={element[i]} isSelected={this.cellSelected(rows,i)} onCellClick={this.props.onCellClick}  />) \n          };\n          board.push(<div className=\"board-row\">{wordList}</div>)\n  \n          rows++;\n        });\n\n        let isSelected = [];\n      \n\n\n      return (\n           <div>\n          {board}\n          </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}