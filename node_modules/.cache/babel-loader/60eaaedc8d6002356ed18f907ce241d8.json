{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/BoardCell.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BoardCell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getClasses = () => {\n      let classes = ['cell'];\n      if (this.props.isSelected) classes.push('selected'); //if (this.props.isHighlighted) classes.push('isHighlighted');\n\n      return classes.join(' ');\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    console.log(\"hello \" + this.props.letter);\n    this.props.onCellClick(this.props.rowIndex, this.props.colIndex, this.props.value); //\n  }\n\n  beginSelection(e) {\n    this.props.onBeginSelection(this.props.rowIndex, this.props.colIndex, this.props.value); //\n  }\n\n  endSelection(e) {\n    this.props.onEndSelection(this.props.rowIndex, this.props.colIndex, this.props.value); //\n  }\n\n  updateSelection(e) {\n    this.props.onUpdateSelection(this.props.rowIndex, this.props.colIndex, this.props.value); //\n  }\n\n  // console.log(this.props.classes)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.getClasses(),\n      onClick: this.handleClick,\n      onMouseDown: this.beginSelection,\n      onMouseUp: this.endSelection,\n      onMouseMove: this.updateSelection,\n      children: this.props.letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this);\n  }\n\n}\n;\n/*   getClasses = () => {\n       let classes = ['cell']; //all cells get the 'cell' class, and maybe additional:\n        if (this.props.isGivenValue) classes.push('given');\n       if (this.props.isSelected) classes.push('selected');\n       if (this.props.isHighlighted) classes.push('related');\n       if (this.props.isConflicting) classes.push('wrong');\n       \n       return classes.join(' ');\n   }\n*/","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/BoardCell.js"],"names":["React","BoardCell","Component","constructor","props","getClasses","classes","isSelected","push","join","handleClick","bind","e","console","log","letter","onCellClick","rowIndex","colIndex","value","beginSelection","onBeginSelection","endSelection","onEndSelection","updateSelection","onUpdateSelection","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBXC,UAnBW,GAmBE,MAAM;AACf,UAAIC,OAAO,GAAC,CAAC,MAAD,CAAZ;AACA,UAAI,KAAKF,KAAL,CAAWG,UAAf,EAA2BD,OAAO,CAACE,IAAR,CAAa,UAAb,EAFZ,CAGf;;AAEA,aAAOF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAP;AAEH,KA1BU;;AAEf,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAGOD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKV,KAAL,CAAWW,MAAlC;AACA,SAAKX,KAAL,CAAWY,WAAX,CAAuB,KAAKZ,KAAL,CAAWa,QAAlC,EAA4C,KAAKb,KAAL,CAAWc,QAAvD,EAAiE,KAAKd,KAAL,CAAWe,KAA5E,EAFW,CAEyE;AACvF;;AACDC,EAAAA,cAAc,CAACR,CAAD,EAAI;AACd,SAAKR,KAAL,CAAWiB,gBAAX,CAA4B,KAAKjB,KAAL,CAAWa,QAAvC,EAAiD,KAAKb,KAAL,CAAWc,QAA5D,EAAsE,KAAKd,KAAL,CAAWe,KAAjF,EADc,CAC2E;AAC5F;;AACDG,EAAAA,YAAY,CAACV,CAAD,EAAI;AACZ,SAAKR,KAAL,CAAWmB,cAAX,CAA0B,KAAKnB,KAAL,CAAWa,QAArC,EAA+C,KAAKb,KAAL,CAAWc,QAA1D,EAAoE,KAAKd,KAAL,CAAWe,KAA/E,EADY,CAC2E;AAC1F;;AACDK,EAAAA,eAAe,CAACZ,CAAD,EAAI;AACf,SAAKR,KAAL,CAAWqB,iBAAX,CAA6B,KAAKrB,KAAL,CAAWa,QAAxC,EAAkD,KAAKb,KAAL,CAAWc,QAA7D,EAAuE,KAAKd,KAAL,CAAWe,KAAlF,EADe,CAC2E;AAC7F;;AAWD;AAEAO,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAK,MAAA,SAAS,EAAE,KAAKrB,UAAL,EAAhB;AAAmC,MAAA,OAAO,EAAE,KAAKK,WAAjD;AACR,MAAA,WAAW,EAAE,KAAKU,cADV;AAER,MAAA,SAAS,EAAE,KAAKE,YAFR;AAGR,MAAA,WAAW,EAAE,KAAKE,eAHV;AAAA,gBAIC,KAAKpB,KAAL,CAAWW;AAJZ;AAAA;AAAA;AAAA;AAAA,YAAR;AAUM;;AA3CiC;AA8ClD;AAEJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\nexport default class BoardCell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n            \n            handleClick(e) { \n                console.log(\"hello \" + this.props.letter);\n                this.props.onCellClick(this.props.rowIndex, this.props.colIndex, this.props.value); //\n            }\n            beginSelection(e) { \n                this.props.onBeginSelection(this.props.rowIndex, this.props.colIndex, this.props.value); //\n            }\n            endSelection(e) { \n                this.props.onEndSelection(this.props.rowIndex, this.props.colIndex, this.props.value); //\n            }\n            updateSelection(e) { \n                this.props.onUpdateSelection(this.props.rowIndex, this.props.colIndex, this.props.value); //\n            } \n            getClasses = () => {\n                let classes=['cell'];\n                if (this.props.isSelected) classes.push('selected');\n                //if (this.props.isHighlighted) classes.push('isHighlighted');\n\n                return classes.join(' ');\n\n            }\n            \n      \n            // console.log(this.props.classes)\n\n            render() {\n                return( <div className={this.getClasses()} onClick={this.handleClick} \n                onMouseDown={this.beginSelection}\n                onMouseUp={this.endSelection}\n                onMouseMove={this.updateSelection}>\n                        {this.props.letter}\n\n\n                    </div>               \n                        )\n\n                     }\n     \n\n    };\n\n /*   getClasses = () => {\n        let classes = ['cell']; //all cells get the 'cell' class, and maybe additional:\n\n        if (this.props.isGivenValue) classes.push('given');\n        if (this.props.isSelected) classes.push('selected');\n        if (this.props.isHighlighted) classes.push('related');\n        if (this.props.isConflicting) classes.push('wrong');\n        \n        return classes.join(' ');\n    }\n*/"]},"metadata":{},"sourceType":"module"}