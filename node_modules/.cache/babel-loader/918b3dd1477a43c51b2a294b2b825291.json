{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as logic from './wordsearch.js';\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cell extends React.Component {\n  render() {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    const randomCharacter = alphabet[Math.floor(Math.random() * alphabet.length)];\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      children: randomCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Grid extends React.Component {\n  renderCell(i) {\n    return /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    const status = 'you have # words left';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(0), this.renderCell(1), this.renderCell(2), this.renderCell(3), this.renderCell(4), this.renderCell(5), this.renderCell(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(7), this.renderCell(8), this.renderCell(9), this.renderCell(10), this.renderCell(11), this.renderCell(12), this.renderCell(13)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(14), this.renderCell(15), this.renderCell(16), this.renderCell(17), this.renderCell(18), this.renderCell(19), this.renderCell(20)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(21), this.renderCell(22), this.renderCell(23), this.renderCell(24), this.renderCell(25), this.renderCell(26), this.renderCell(27)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(28), this.renderCell(29), this.renderCell(30), this.renderCell(31), this.renderCell(32), this.renderCell(33), this.renderCell(34)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(35), this.renderCell(36), this.renderCell(37), this.renderCell(38), this.renderCell(39), this.renderCell(40), this.renderCell(41)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderCell(42), this.renderCell(43), this.renderCell(44), this.renderCell(45), this.renderCell(46), this.renderCell(47), this.renderCell(48)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WordSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    let wordList = ['house', 'cat'];\n    let rowCount = 20;\n    let colCount = 20;\n    this.grid = logic.getWordGrid(wordList, rowCount, colCount);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          values: this.grid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(WordSearch, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/index.js"],"names":["React","ReactDOM","logic","Cell","Component","render","alphabet","randomCharacter","Math","floor","random","length","Grid","renderCell","i","status","WordSearch","constructor","props","wordList","rowCount","colCount","grid","getWordGrid","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as logic from './wordsearch.js'\n\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\nclass Cell extends React.Component {\n  render() {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\n    const randomCharacter = alphabet[Math.floor(Math.random() * alphabet.length)]\n\n    return (\n      <button className=\"cell\">\n        {randomCharacter}\n      </button>\n    );\n  }\n}\n\n\nclass Grid extends React.Component {\n  renderCell(i) {\n    return <Cell />;\n  }\n\n  render() {\n    const status = 'you have # words left';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderCell(0)}\n          {this.renderCell(1)}\n          {this.renderCell(2)}\n          {this.renderCell(3)}\n          {this.renderCell(4)}\n          {this.renderCell(5)}\n          {this.renderCell(6)}\n\n        </div>\n        <div className=\"board-row\">\n          {this.renderCell(7)}\n          {this.renderCell(8)}\n          {this.renderCell(9)}\n          {this.renderCell(10)}\n          {this.renderCell(11)}\n          {this.renderCell(12)}\n          {this.renderCell(13)}\n\n        </div>\n        <div className=\"board-row\">\n          {this.renderCell(14)}\n          {this.renderCell(15)}\n          {this.renderCell(16)}\n          {this.renderCell(17)}\n          {this.renderCell(18)}\n          {this.renderCell(19)}\n          {this.renderCell(20)}\n        </div>  \n        <div className=\"board-row\">\n          {this.renderCell(21)}\n          {this.renderCell(22)}\n          {this.renderCell(23)}\n          {this.renderCell(24)}\n          {this.renderCell(25)}\n          {this.renderCell(26)}\n          {this.renderCell(27)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderCell(28)}\n          {this.renderCell(29)}\n          {this.renderCell(30)}\n          {this.renderCell(31)}\n          {this.renderCell(32)}\n          {this.renderCell(33)}\n          {this.renderCell(34)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderCell(35)}\n          {this.renderCell(36)}\n          {this.renderCell(37)}\n          {this.renderCell(38)}\n          {this.renderCell(39)}\n          {this.renderCell(40)}\n          {this.renderCell(41)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderCell(42)}\n          {this.renderCell(43)}\n          {this.renderCell(44)}\n          {this.renderCell(45)}\n          {this.renderCell(46)}\n          {this.renderCell(47)}\n          {this.renderCell(48)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass WordSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    let wordList = ['house', 'cat'];\n    let rowCount = 20;\n    let colCount = 20;\n    this.grid = logic.getWordGrid(wordList, rowCount, colCount);\n  }\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Grid values={this.grid} />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <WordSearch />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}