{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/grid.js\";\nimport React from 'react';\nimport BoardCell from './BoardCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(rowIndex, colIndex, val) {\n    console.log(\"hello \" + val);\n  }\n\n  cellSelected(rows, cols) {\n    let charIndex = \"r\" + rows + \"-c\" + cols;\n    return this.props.highlightedChars.hasOwnProperty(charIndex);\n  }\n\n  render() {\n    const status = 'you have # words left';\n    const board = [];\n    let rows = 0;\n    this.props.values.forEach(element => {\n      let wordList = [];\n\n      for (let i = 0; i < element.length; i++) {\n        wordList.push( /*#__PURE__*/_jsxDEV(BoardCell, {\n          letter: element[i],\n          isSelected: this.cellSelected(rows, i),\n          onCellClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }, this));\n      }\n\n      ;\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: wordList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }, this));\n      rows++;\n    });\n    let isSelected = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), board, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"word-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/grid.js"],"names":["React","BoardCell","Grid","Component","constructor","props","handleClick","bind","rowIndex","colIndex","val","console","log","cellSelected","rows","cols","charIndex","highlightedChars","hasOwnProperty","render","status","board","values","forEach","element","wordList","i","length","push","isSelected"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,QAAD,EAAWC,QAAX,EAAqBC,GAArB,EAAyB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,GAAvB;AACD;;AAEDG,EAAAA,YAAY,CAACC,IAAD,EAAMC,IAAN,EAAY;AACtB,QAAIC,SAAS,GAAC,MAAMF,IAAN,GAAa,IAAb,GAAoBC,IAAlC;AACA,WAAO,KAAKV,KAAL,CAAWY,gBAAX,CAA4BC,cAA5B,CAA2CF,SAA3C,CAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,uBAAf;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,QAAIP,IAAI,GAAC,CAAT;AAEA,SAAKT,KAAL,CAAWiB,MAAX,CAAkBC,OAAlB,CAA0BC,OAAO,IAAI;AACnC,UAAIC,QAAQ,GAAE,EAAd;;AACE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtCD,QAAAA,QAAQ,CAACG,IAAT,eAAc,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEJ,OAAO,CAACE,CAAD,CAA1B;AAA+B,UAAA,UAAU,EAAE,KAAKb,YAAL,CAAkBC,IAAlB,EAAuBY,CAAvB,CAA3C;AAAsE,UAAA,WAAW,EAAE,KAAKpB;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AAAA;AACDe,MAAAA,KAAK,CAACO,IAAN,eAAW;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAX;AAEAX,MAAAA,IAAI;AACL,KARH;AAUE,QAAIe,UAAU,GAAG,EAAjB;AAGF,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBT;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,KAFH,eAGE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAxC6C","sourcesContent":["\nimport React from 'react';\nimport BoardCell from './BoardCell'\n\n\nexport default class Grid extends React.Component {\n    constructor(props) {      \n      super(props);     \n      this.handleClick = this.handleClick.bind(this); \n    }\n\n    handleClick(rowIndex, colIndex, val){\n      console.log(\"hello \" + val)\n    }\n  \n    cellSelected(rows,cols) {\n      let charIndex=\"r\" + rows + \"-c\" + cols;\n      return this.props.highlightedChars.hasOwnProperty(charIndex);\n    }\n  \n    render() {\n      const status = 'you have # words left';\n      const board = [];\n      let rows=0;\n  \n      this.props.values.forEach(element => {\n        let wordList =[];\n          for (let i = 0; i < element.length; i++){\n            wordList.push(<BoardCell letter={element[i]} isSelected={this.cellSelected(rows,i)} onCellClick={this.handleClick}  />) \n          };\n          board.push(<div className=\"board-row\">{wordList}</div>)\n  \n          rows++;\n        });\n      \n        let isSelected = [];\n  \n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          {board}\n          <div id=\"word-list\"></div>\n          </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}