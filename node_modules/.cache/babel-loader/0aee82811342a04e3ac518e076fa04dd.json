{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport getWordGrid from './wordsearch'; //import getWordGrid, { wordList, rowCount, colCount } from './wordsearch.js';\n//import getRandomInt, {min, max} from './wordsearch.js';\n\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cell extends React.Component {\n  render() {\n    //getWordGrid(wordList, rowCount, colCount) \n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class gridColumn\n// class gridRow ??\n\n\nclass Grid extends React.Component {\n  // renderCell(i) {\n  //    return <Cell />;}\n  render() {\n    const status = 'you have # words left'; //getWordGrid(wordList, rowCount, colCount) ;\n\n    const board = [];\n    this.props.grid.array.forEach(element => {\n      let wordList = [];\n\n      for (let i = 0; i < element.length; i++) {\n        wordList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: element[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this));\n      }\n\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), board]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WordSearch extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(WordSearch, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 81,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/index.js"],"names":["React","ReactDOM","getWordGrid","Cell","Component","render","Grid","status","board","props","grid","array","forEach","element","wordList","i","length","push","WordSearch","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP;AAEA,wBACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AATgC,C,CAYnC;AACA;;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACI,SAAzB,CAAmC;AAClC;AACD;AAGEC,EAAAA,MAAM,GAAG;AACP,UAAME,MAAM,GAAG,uBAAf,CADO,CAEP;;AACA,UAAMC,KAAK,GAAG,EAAd;AAEA,SAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,OAAtB,CAA8BC,OAAO,IAAI;AACvC,UAAIC,QAAQ,GAAE,EAAd;;AACE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtCD,QAAAA,QAAQ,CAACG,IAAT,eAAc;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACbJ,OAAO,CAACE,CAAD;AADM;AAAA;AAAA;AAAA;AAAA,gBAAd;AAID;;AACDP,MAAAA,KAAK,CAACS,IAAN,eAAW;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAX;AACD,KATH;AAWA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBV;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA3BgC;;AA+BnC,MAAMU,UAAN,SAAyBlB,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAbsC;;AAkBzCJ,QAAQ,CAACI,MAAT,eACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport getWordGrid from './wordsearch';\n//import getWordGrid, { wordList, rowCount, colCount } from './wordsearch.js';\n//import getRandomInt, {min, max} from './wordsearch.js';\n\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\nclass Cell extends React.Component {\n  render() {\n    //getWordGrid(wordList, rowCount, colCount) \n      \n    return (\n      <button className=\"cell\">\n        { }\n      </button>\n    );\n  }\n}\n\n// class gridColumn\n// class gridRow ??\n\nclass Grid extends React.Component {\n // renderCell(i) {\n//    return <Cell />;}\n  \n  \n  render() {\n    const status = 'you have # words left';\n    //getWordGrid(wordList, rowCount, colCount) ;\n    const board = [];\n\n    this.props.grid.array.forEach(element => {\n      let wordList =[];\n        for (let i = 0; i < element.length; i++){\n          wordList.push(<div className=\"board-row\">\n          {element[i]}\n          </div>\n          )\n        }\n        board.push(<div className=\"container\"></div>)\n      });\n    \n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {board}\n        </div>\n    );\n  }\n}\n\n\nclass WordSearch extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Grid />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(\n  <WordSearch />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}