{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/BoardCell.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BoardCell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getClasses = () => {\n      let classes = ['cell'];\n      if (this.props.isSelected) classes.push('selected'); //if (this.props.isHighlighted) classes.push('isHighlighted');\n\n      return classes.join(' ');\n    };\n\n    this.getWord = () => {\n      let letters = this.props.value;\n      this.props.onCellClick(this.props.value); //\n\n      if (this.props.isSelected) letters.push('selected');\n      return letters.join(' ');\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    console.log(\"hello \" + this.props.letter);\n    this.props.onCellClick(this.props.rowIndex, this.props.colIndex, this.props.value); //\n  }\n\n  // console.log(this.props.classes)\n  render() {\n    console.log(this.getWord);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.getClasses(),\n      onClick: this.handleClick,\n      children: [this.props.letter, this.getWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this);\n  }\n\n}\n;\n/*   getClasses = () => {\n       let classes = ['cell']; //all cells get the 'cell' class, and maybe additional:\n        if (this.props.isGivenValue) classes.push('given');\n       if (this.props.isSelected) classes.push('selected');\n       if (this.props.isHighlighted) classes.push('related');\n       if (this.props.isConflicting) classes.push('wrong');\n       \n       return classes.join(' ');\n   }\n*/","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/BoardCell.js"],"names":["React","BoardCell","Component","constructor","props","getClasses","classes","isSelected","push","join","getWord","letters","value","onCellClick","handleClick","bind","e","console","log","letter","rowIndex","colIndex","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQXC,UARW,GAQE,MAAM;AACf,UAAIC,OAAO,GAAC,CAAC,MAAD,CAAZ;AACA,UAAI,KAAKF,KAAL,CAAWG,UAAf,EAA2BD,OAAO,CAACE,IAAR,CAAa,UAAb,EAFZ,CAGf;;AAEA,aAAOF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAP;AAEH,KAfU;;AAAA,SAiBfC,OAjBe,GAiBL,MAAM;AACZ,UAAIC,OAAO,GAAE,KAAKP,KAAL,CAAWQ,KAAxB;AACA,WAAKR,KAAL,CAAWS,WAAX,CAAwB,KAAKT,KAAL,CAAWQ,KAAnC,EAFY,CAE+B;;AAE3C,UAAI,KAAKR,KAAL,CAAWG,UAAf,EAA2BI,OAAO,CAACH,IAAR,CAAa,UAAb;AAE3B,aAAOG,OAAO,CAACF,IAAR,CAAa,GAAb,CAAP;AACH,KAxBc;;AAEf,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACOD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKd,KAAL,CAAWe,MAAlC;AACA,SAAKf,KAAL,CAAWS,WAAX,CAAuB,KAAKT,KAAL,CAAWgB,QAAlC,EAA4C,KAAKhB,KAAL,CAAWiB,QAAvD,EAAiE,KAAKjB,KAAL,CAAWQ,KAA5E,EAFW,CAEyE;AACvF;;AAkBD;AAEAU,EAAAA,MAAM,GAAG;AACLL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,OAAjB;AAEA,wBAAQ;AAAK,MAAA,SAAS,EAAE,KAAKL,UAAL,EAAhB;AAAmC,MAAA,OAAO,EAAE,KAAKS,WAAjD;AAAA,iBACC,KAAKV,KAAL,CAAWe,MADZ,EAEC,KAAKT,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAQM;;AAvCiC;AA0ClD;AAEJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\nexport default class BoardCell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n            handleClick(e) { \n                console.log(\"hello \" + this.props.letter);\n                this.props.onCellClick(this.props.rowIndex, this.props.colIndex, this.props.value); //\n            }\n            getClasses = () => {\n                let classes=['cell'];\n                if (this.props.isSelected) classes.push('selected');\n                //if (this.props.isHighlighted) classes.push('isHighlighted');\n\n                return classes.join(' ');\n\n            }\n            \n        getWord = () => {\n            let letters= this.props.value;\n            this.props.onCellClick( this.props.value); //\n\n            if (this.props.isSelected) letters.push('selected');\n\n            return letters.join(' ');\n        }\n            // console.log(this.props.classes)\n\n            render() {\n                console.log(this.getWord)\n\n                return( <div className={this.getClasses()} onClick={this.handleClick}>\n                        {this.props.letter}\n                        {this.getWord}\n\n\n                    </div>               \n                        )\n\n                     }\n     \n\n    };\n\n /*   getClasses = () => {\n        let classes = ['cell']; //all cells get the 'cell' class, and maybe additional:\n\n        if (this.props.isGivenValue) classes.push('given');\n        if (this.props.isSelected) classes.push('selected');\n        if (this.props.isHighlighted) classes.push('related');\n        if (this.props.isConflicting) classes.push('wrong');\n        \n        return classes.join(' ');\n    }\n*/"]},"metadata":{},"sourceType":"module"}