{"ast":null,"code":"import _classCallCheck from\"/Users/yara/Desktop/WebDevelopment/word-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yara/Desktop/WebDevelopment/word-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/yara/Desktop/WebDevelopment/word-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yara/Desktop/WebDevelopment/word-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yara/Desktop/WebDevelopment/word-search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Grid from'./grid';import*as logic from'../logic/app';import ShowWordList from'./wordList';import BoardCell from'./BoardCell';//import Status from './status'; // import Finished from './status';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WordSearch=/*#__PURE__*/function(_React$Component){_inherits(WordSearch,_React$Component);var _super=_createSuper(WordSearch);function WordSearch(props){var _this;_classCallCheck(this,WordSearch);_this=_super.call(this,props);_this.state={highlightedChars:{}};_this.wordList=['house','dog','leg','react','hello'];var rowCount=10;var colCount=10;_this.grid=logic.getWordGrid(_this.wordList,rowCount,colCount);_this.handleHighlightChange=_this.handleHighlightChange.bind(_assertThisInitialized(_this));return _this;}_createClass(WordSearch,[{key:\"handleHighlightChange\",value:function handleHighlightChange(rowIndexStart,rowIndexEnd,colIndexStart,colIndexEnd,newHighlightedState){var newHighlightedChars=this.cloneObject(this.state.highlightedChars);if(rowIndexStart==rowIndexEnd){// if horizontal\nfor(var c=colIndexStart;c<=colIndexEnd;c++){var charIndex=\"r\"+rowIndexStart+\"-c\"+c;if(newHighlightedState){newHighlightedChars[charIndex]=true;}else{delete newHighlightedChars[charIndex];}}}else if(colIndexStart==colIndexEnd){// if vertical\nfor(var r=rowIndexStart;r<=rowIndexEnd;r++){var _charIndex=\"r\"+r+\"-c\"+colIndexStart;if(newHighlightedState){newHighlightedChars[_charIndex]=true;}else{delete newHighlightedChars[_charIndex];}}}this.setState({highlightedChars:newHighlightedChars});}},{key:\"cloneObject\",value:function cloneObject(obj){return JSON.parse(JSON.stringify(obj));}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Grid,{values:this.grid,highlightedChars:this.state.highlightedChars,handleHighlightChange:this.handleHighlightChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsx(\"ol\",{children:\"Welcome to Word Sreach react game\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[\" \",/*#__PURE__*/_jsx(ShowWordList,{wordList:this.wordList,foundWordList:logic.getWordsFound(this.state.highlightedChars,this.wordList,this.grid)})]})]})]});}}]);return WordSearch;}(React.Component);export{WordSearch as default};;","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/wordsearch.js"],"names":["React","Grid","logic","ShowWordList","BoardCell","WordSearch","props","state","highlightedChars","wordList","rowCount","colCount","grid","getWordGrid","handleHighlightChange","bind","rowIndexStart","rowIndexEnd","colIndexStart","colIndexEnd","newHighlightedState","newHighlightedChars","cloneObject","c","charIndex","r","setState","obj","JSON","parse","stringify","getWordsFound","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Grid from './grid';\nimport * as logic from '../logic/app';\nimport ShowWordList from './wordList';\nimport BoardCell from './BoardCell';\n//import Status from './status'; // import Finished from './status';\n\n\n\n\nexport default class WordSearch extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        highlightedChars: {\n        },\n      };\n      \n      this.wordList = ['house', 'dog', 'leg', 'react', 'hello'];\n      let rowCount = 10;\n      let colCount = 10;\n\n      this.grid = logic.getWordGrid(this.wordList, rowCount, colCount);\n\n      this.handleHighlightChange = this.handleHighlightChange.bind(this); \n    }\n\n    handleHighlightChange(rowIndexStart, rowIndexEnd, colIndexStart, colIndexEnd, newHighlightedState){\n      const newHighlightedChars = this.cloneObject(this.state.highlightedChars); \n      if (rowIndexStart == rowIndexEnd){ // if horizontal\n        for (let c = colIndexStart; c <= colIndexEnd; c++) {\n          let charIndex = \"r\" + rowIndexStart + \"-c\" + c;\n          \n          if (newHighlightedState) {\n            newHighlightedChars[charIndex] = true;\n          } else {\n            delete newHighlightedChars[charIndex];\n          }\n      \n        }\n\n      } else if (colIndexStart == colIndexEnd) {// if vertical\n        for (let r = rowIndexStart; r <= rowIndexEnd; r++) {\n          let charIndex = \"r\" + r + \"-c\" + colIndexStart;\n          \n          if (newHighlightedState) {\n            newHighlightedChars[charIndex] = true;\n          } else {\n            delete newHighlightedChars[charIndex];\n          }\n      \n        }\n      }\n    \n    \n      this.setState({\n       highlightedChars: newHighlightedChars, \n      })\n    }\n\n  cloneObject(obj) { \n  return JSON.parse(JSON.stringify(obj));\n  }\n  \n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Grid values={this.grid} highlightedChars={this.state.highlightedChars} handleHighlightChange={this.handleHighlightChange}  />\n          </div>\n          <div className=\"game-info\">\n                <ol>Welcome to Word Sreach react game</ol>\n                <ol> <ShowWordList wordList={this.wordList} foundWordList={logic.getWordsFound(this.state.highlightedChars,this.wordList,this.grid)}/></ol>\n\n        </div>\n        </div>\n\n      )}};"]},"metadata":{},"sourceType":"module"}