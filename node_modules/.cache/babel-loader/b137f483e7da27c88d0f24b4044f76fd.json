{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/wordsearch.js\";\nimport React from 'react';\nimport Grid from './grid';\nimport * as logic from '../logic/app';\nimport ShowWordList from './wordList';\nimport BoardCell from './BoardCell'; //import Status from './status';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class WordSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlightedChars: {}\n    };\n    this.wordList = ['house', 'dog', 'leg', 'react', 'hello'];\n    let rowCount = 10;\n    let colCount = 10;\n    this.grid = logic.getWordGrid(this.wordList, rowCount, colCount);\n    this.handleHighlightChange = this.handleHighlightChange.bind(this);\n  }\n\n  handleHighlightChange(rowIndexStart, rowIndexEnd, colIndexStart, colIndexEnd, newHighlightedState) {\n    const newHighlightedChars = this.cloneObject(this.state.highlightedChars);\n\n    if (rowIndexStart == rowIndexEnd) {\n      // if horizontal\n      for (let c = colIndexStart; c <= colIndexEnd; c++) {\n        let charIndex = \"r\" + rowIndexStart + \"-c\" + c;\n\n        if (newHighlightedState) {\n          newHighlightedChars[charIndex] = true;\n        } else {\n          delete newHighlightedChars[charIndex];\n        }\n      }\n    } else if (colIndexStart == colIndexEnd) {\n      // if vertical\n      for (let r = rowIndexStart; r <= rowIndexEnd; r++) {\n        let charIndex = \"r\" + r + \"-c\" + colIndexStart;\n\n        if (newHighlightedState) {\n          newHighlightedChars[charIndex] = true;\n        } else {\n          delete newHighlightedChars[charIndex];\n        }\n      }\n    }\n\n    this.setState({\n      highlightedChars: newHighlightedChars\n    });\n  }\n\n  cloneObject(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  render() {\n    let toastVisible = this.wordList.length === this.props.logic.foundWordList.length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          values: this.grid,\n          highlightedChars: this.state.highlightedChars,\n          handleHighlightChange: this.handleHighlightChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: toastVisible ? \"block\" : \"block\"\n          },\n          className: \"success\",\n          children: \"Wohoooo, You did it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: \"Welcome to Word Sreach react game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(ShowWordList, {\n            wordList: this.wordList,\n            foundWordList: logic.getWordsFound(this.state.highlightedChars, this.wordList, this.grid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/cmp/wordsearch.js"],"names":["React","Grid","logic","ShowWordList","BoardCell","WordSearch","Component","constructor","props","state","highlightedChars","wordList","rowCount","colCount","grid","getWordGrid","handleHighlightChange","bind","rowIndexStart","rowIndexEnd","colIndexStart","colIndexEnd","newHighlightedState","newHighlightedChars","cloneObject","c","charIndex","r","setState","obj","JSON","parse","stringify","render","toastVisible","length","foundWordList","display","getWordsFound"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Grid from './grid';\nimport * as logic from '../logic/app';\nimport ShowWordList from './wordList';\nimport BoardCell from './BoardCell';\n//import Status from './status';\n\n\n\nexport default class WordSearch extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        highlightedChars: {\n        },\n      };\n      \n      this.wordList = ['house', 'dog', 'leg', 'react', 'hello'];\n      let rowCount = 10;\n      let colCount = 10;\n\n      this.grid = logic.getWordGrid(this.wordList, rowCount, colCount);\n\n      this.handleHighlightChange = this.handleHighlightChange.bind(this); \n    }\n\n    handleHighlightChange(rowIndexStart, rowIndexEnd, colIndexStart, colIndexEnd, newHighlightedState){\n      const newHighlightedChars = this.cloneObject(this.state.highlightedChars); \n      if (rowIndexStart == rowIndexEnd){ // if horizontal\n        for (let c = colIndexStart; c <= colIndexEnd; c++) {\n          let charIndex = \"r\" + rowIndexStart + \"-c\" + c;\n          \n          if (newHighlightedState) {\n            newHighlightedChars[charIndex] = true;\n          } else {\n            delete newHighlightedChars[charIndex];\n          }\n      \n        }\n\n      } else if (colIndexStart == colIndexEnd) {// if vertical\n        for (let r = rowIndexStart; r <= rowIndexEnd; r++) {\n          let charIndex = \"r\" + r + \"-c\" + colIndexStart;\n          \n          if (newHighlightedState) {\n            newHighlightedChars[charIndex] = true;\n          } else {\n            delete newHighlightedChars[charIndex];\n          }\n      \n        }\n      }\n    \n    \n      this.setState({\n       highlightedChars: newHighlightedChars, \n      })\n    }\n\n  cloneObject(obj) { \n  return JSON.parse(JSON.stringify(obj));\n  }\n  \n    render() {\n      let toastVisible = this.wordList.length === this.props.logic.foundWordList.length;\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Grid values={this.grid} highlightedChars={this.state.highlightedChars} handleHighlightChange={this.handleHighlightChange}  />\n          </div>\n          <div className=\"game-info\">\n              <div style={{display: toastVisible ? \"block\" : \"block\"}} className=\"success\">Wohoooo, You did it</div>\n\n                <ol>Welcome to Word Sreach react game</ol>\n                <ol> <ShowWordList wordList={this.wordList} foundWordList={logic.getWordsFound(this.state.highlightedChars,this.wordList,this.grid)}/></ol>\n\n        </div>\n        </div>\n\n      )}};"]},"metadata":{},"sourceType":"module"}