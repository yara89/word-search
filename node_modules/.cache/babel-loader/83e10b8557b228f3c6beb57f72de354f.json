{"ast":null,"code":"var _jsxFileName = \"/Users/yara/Desktop/WebDevelopment/word-search/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BoardRow from './logic/Boardrow'; //import * as logic from './wordsearch'\n\nimport { getWordGrid } from './wordsearch';\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n\n/*\nclass Cell extends React.Component {\n  constructor(props) {      \n     super(props);     \n      this.handleClick = this.handleClick.bind(this); }\n\n  handleClick(e) { this.props.onCellClick(this.props.rowIndex, this.props.colIndex, this.props.value);  }\n  render() {\n    return (\n      <button className=\"cell\" onClick={this.handleClick} >\n       {this.props.value}\n      </button>\n    );\n  }\n}\n\n\n\nclass Grid extends React.Component {\n  constructor(props) {      \n    super(props);     \n    this.handleClick = this.handleClick.bind(this); }\n\n  renderCell(i) {\n    return <Cell />;\n  }\n  handleClick(rowIndex, colIndex, val){\n  console.log(\"hello \" + val)}\n\n  cellSelected(rows,cols) {\n    let charIndex=\"r\" + rows + \"-c\" + cols;\n    return this.props.highlightedChars.hasOwnProperty(charIndex);\n\n  }\n\n  render() {\n    const status = 'you have # words left';\n    const board = [];\n    let rows=0;\n\n    this.props.values.forEach(element => {\n      let wordList =[];\n        for (let i = 0; i < element.length; i++){\n          wordList.push(<BoardRow value={element[i]} isSelected={this.cellSelected(rows,i)} onCellClick={this.handleClick}  />) \n        };\n        board.push(<div className=\"board-row\">{wordList}</div>)\n\n        rows++;\n      });\n    \n      let isSelected = [];\n\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {board}\n        </div>\n    );\n  }\n}\n   \n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class WordSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    let wordList = ['house', 'cat', 'leg', 'react', 'hello'];\n    let rowCount = 10;\n    let colCount = 10;\n    this.grid = getWordGrid(wordList, rowCount, colCount);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          values: this.grid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.wordList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: \"Welcome to Word Sreach react game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(WordSearch, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/yara/Desktop/WebDevelopment/word-search/src/index.js"],"names":["React","ReactDOM","BoardRow","getWordGrid","WordSearch","Component","constructor","props","wordList","rowCount","colCount","grid","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CACA;;AACA,SAASC,WAAT,QAA4B,cAA5B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,QAAIC,QAAQ,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,EAAwB,OAAxB,EAAiC,OAAjC,CAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,SAAKC,IAAL,GAAYR,WAAW,CAACK,QAAD,EAAWC,QAAX,EAAqBC,QAArB,CAAvB;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,MAAM,EAAE,KAAKD;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAM,KAAKH;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AApBqD;AAwBxDP,QAAQ,CAACW,MAAT,eACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BoardRow from './logic/Boardrow';\n//import * as logic from './wordsearch'\nimport { getWordGrid } from './wordsearch';\n\n\n/* TODO\n\nallow Selection of multiple cells\nGenerate words, and find a place it fits in grid\nallow diagonal selection?\n\n*/\n/*\nclass Cell extends React.Component {\n  constructor(props) {      \n     super(props);     \n      this.handleClick = this.handleClick.bind(this); }\n\n  handleClick(e) { this.props.onCellClick(this.props.rowIndex, this.props.colIndex, this.props.value);  }\n  render() {\n    return (\n      <button className=\"cell\" onClick={this.handleClick} >\n       {this.props.value}\n      </button>\n    );\n  }\n}\n\n\n\nclass Grid extends React.Component {\n  constructor(props) {      \n    super(props);     \n    this.handleClick = this.handleClick.bind(this); }\n\n  renderCell(i) {\n    return <Cell />;\n  }\n  handleClick(rowIndex, colIndex, val){\n  console.log(\"hello \" + val)}\n\n  cellSelected(rows,cols) {\n    let charIndex=\"r\" + rows + \"-c\" + cols;\n    return this.props.highlightedChars.hasOwnProperty(charIndex);\n\n  }\n\n  render() {\n    const status = 'you have # words left';\n    const board = [];\n    let rows=0;\n\n    this.props.values.forEach(element => {\n      let wordList =[];\n        for (let i = 0; i < element.length; i++){\n          wordList.push(<BoardRow value={element[i]} isSelected={this.cellSelected(rows,i)} onCellClick={this.handleClick}  />) \n        };\n        board.push(<div className=\"board-row\">{wordList}</div>)\n\n        rows++;\n      });\n    \n      let isSelected = [];\n\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {board}\n        </div>\n    );\n  }\n}\n   \n\n*/\n\nexport default class WordSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    let wordList = ['house', 'cat', 'leg', 'react', 'hello'];\n    let rowCount = 10;\n    let colCount = 10;\n    this.grid = getWordGrid(wordList, rowCount, colCount);\n  }\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Grid values={this.grid} />\n        </div>\n        <div className=\"game-info\">\n          <div>{this.wordList}</div>\n          <ol>Welcome to Word Sreach react game</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <WordSearch />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}